import jsPDF from 'jspdf';
import { ComprehensiveAnalysis } from './llmService';

export const generateCropRecommendationReport = (
  analysis: ComprehensiveAnalysis,
  formData: {
    location: string;
    landSize: string;
    season: string;
    budget: string;
    previousCrop: string;
  },
  generatedDate: string = new Date().toLocaleDateString('en-IN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })
): void => {
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  const pageHeight = doc.internal.pageSize.getHeight();
  let yPosition = 20;

  // Helper function to add text with word wrapping
  const addWrappedText = (text: string, x: number, y: number, maxWidth: number, fontSize: number = 10) => {
    doc.setFontSize(fontSize);
    const lines = doc.splitTextToSize(text, maxWidth);
    doc.text(lines, x, y);
    return y + (lines.length * (fontSize * 0.4));
  };

  // Helper function to add a section header
  const addSectionHeader = (title: string, y: number) => {
    doc.setFontSize(14);
    doc.setFont(undefined, 'bold');
    doc.setTextColor(0, 100, 0); // Green color
    doc.text(title, 20, y);
    doc.setFont(undefined, 'normal');
    doc.setTextColor(0, 0, 0); // Black color
    return y + 10;
  };

  // Helper function to add a subsection
  const addSubsection = (title: string, content: string, y: number, maxWidth: number = 170) => {
    doc.setFontSize(12);
    doc.setFont(undefined, 'bold');
    doc.text(title, 20, y);
    doc.setFont(undefined, 'normal');
    doc.setFontSize(10);
    return addWrappedText(content, 20, y + 5, maxWidth);
  };

  // Header
  doc.setFontSize(20);
  doc.setFont(undefined, 'bold');
  doc.setTextColor(0, 100, 0);
  doc.text('Bharat Yield - Crop Recommendation Report', 20, yPosition);
  
  doc.setFontSize(12);
  doc.setFont(undefined, 'normal');
  doc.setTextColor(100, 100, 100);
  doc.text(`Generated on: ${generatedDate}`, 20, yPosition + 10);
  
  yPosition += 30;

  // Farm Profile Section
  yPosition = addSectionHeader('Farm Profile', yPosition);
  
  const farmProfile = `Location: ${formData.location}
Land Size: ${formData.landSize} hectares
Season: ${formData.season}
Budget: ₹${formData.budget} per hectare
Previous Crop: ${formData.previousCrop}`;
  
  yPosition = addWrappedText(farmProfile, 20, yPosition, 170);
  yPosition += 10;

  // Soil Health Analysis Section
  yPosition = addSectionHeader('Soil Health Analysis', yPosition);
  
  const soilHealthData = `pH Level: ${analysis.soilHealth.pH}
Nitrogen: ${analysis.soilHealth.nitrogen} kg/ha
Phosphorus: ${analysis.soilHealth.phosphorus} kg/ha
Potassium: ${analysis.soilHealth.potassium} kg/ha
Organic Carbon: ${analysis.soilHealth.organicCarbon}%`;
  
  yPosition = addWrappedText(soilHealthData, 20, yPosition, 170);
  yPosition += 5;
  
  yPosition = addSubsection('Summary:', analysis.soilHealth.summary, yPosition);
  yPosition += 5;
  
  yPosition = addSubsection('Recommendations:', analysis.soilHealth.recommendations.join('\n• '), yPosition);
  yPosition += 15;

  // Check if we need a new page
  if (yPosition > pageHeight - 50) {
    doc.addPage();
    yPosition = 20;
  }

  // Crop Recommendation Section
  yPosition = addSectionHeader('Crop Recommendation', yPosition);
  
  const cropData = `Recommended Crop: ${analysis.cropRecommendation.crop}
Expected Yield: ${analysis.cropRecommendation.yield}
Estimated Profit: ${analysis.cropRecommendation.profit}
Confidence Level: ${analysis.cropRecommendation.confidence}%`;
  
  yPosition = addWrappedText(cropData, 20, yPosition, 170);
  yPosition += 10;
  
  yPosition = addSubsection('Irrigation Plan:', analysis.cropRecommendation.irrigation, yPosition);
  yPosition += 5;
  
  yPosition = addSubsection('Fertilizer Recommendation:', analysis.cropRecommendation.fertilizer, yPosition);
  yPosition += 15;

  // Check if we need a new page
  if (yPosition > pageHeight - 80) {
    doc.addPage();
    yPosition = 20;
  }

  // Detailed Analysis Section
  yPosition = addSectionHeader('Detailed Analysis', yPosition);
  yPosition = addWrappedText(analysis.detailedAnalysis, 20, yPosition, 170);
  yPosition += 15;

  // Check if we need a new page
  if (yPosition > pageHeight - 60) {
    doc.addPage();
    yPosition = 20;
  }

  // Implementation Plan Section
  yPosition = addSectionHeader('Implementation Plan', yPosition);
  
  const implementationSteps = analysis.implementationPlan.map((step, index) => 
    `${index + 1}. ${step}`
  ).join('\n');
  
  yPosition = addWrappedText(implementationSteps, 20, yPosition, 170);
  yPosition += 15;

  // Footer
  const footerY = pageHeight - 20;
  doc.setFontSize(8);
  doc.setTextColor(100, 100, 100);
  doc.text('Generated by Bharat Yield - AI-Powered Agricultural Solutions', 20, footerY);
  doc.text('For more information, visit our platform or contact local agriculture experts.', 20, footerY + 5);

  // Save the PDF
  const fileName = `Crop_Recommendation_${formData.location.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.pdf`;
  doc.save(fileName);
};

// Alternative function to generate a simple text report
export const generateTextReport = (
  analysis: ComprehensiveAnalysis,
  formData: {
    location: string;
    landSize: string;
    season: string;
    budget: string;
    previousCrop: string;
  }
): string => {
  const report = `
BHARAT YIELD - CROP RECOMMENDATION REPORT
Generated on: ${new Date().toLocaleDateString('en-IN')}

FARM PROFILE
============
Location: ${formData.location}
Land Size: ${formData.landSize} hectares
Season: ${formData.season}
Budget: ₹${formData.budget} per hectare
Previous Crop: ${formData.previousCrop}

SOIL HEALTH ANALYSIS
===================
pH Level: ${analysis.soilHealth.pH}
Nitrogen: ${analysis.soilHealth.nitrogen} kg/ha
Phosphorus: ${analysis.soilHealth.phosphorus} kg/ha
Potassium: ${analysis.soilHealth.potassium} kg/ha
Organic Carbon: ${analysis.soilHealth.organicCarbon}%

Summary: ${analysis.soilHealth.summary}

Recommendations:
${analysis.soilHealth.recommendations.map(rec => `• ${rec}`).join('\n')}

CROP RECOMMENDATION
==================
Recommended Crop: ${analysis.cropRecommendation.crop}
Expected Yield: ${analysis.cropRecommendation.yield}
Estimated Profit: ${analysis.cropRecommendation.profit}
Confidence Level: ${analysis.cropRecommendation.confidence}%

Irrigation Plan: ${analysis.cropRecommendation.irrigation}
Fertilizer Recommendation: ${analysis.cropRecommendation.fertilizer}

DETAILED ANALYSIS
================
${analysis.detailedAnalysis}

IMPLEMENTATION PLAN
==================
${analysis.implementationPlan.map((step, index) => `${index + 1}. ${step}`).join('\n')}

---
Generated by Bharat Yield - AI-Powered Agricultural Solutions
For more information, visit our platform or contact local agriculture experts.
`;

  return report;
};
